#!/usr/bin/env groovy

// Configure the build properties
properties([
    buildDiscarder(logRotator(numToKeepStr: '500', daysToKeepStr: '4')),
    disableConcurrentBuilds(),
])

pipeline {

  // env variables
  environment { 
    // specific psql conf
     repository = "uyuni-project/uyuni"
     context = "susemanager_unittests" 
     description = "susemanager unit test" 
     filter = "susemanager/"
     git_fs = "${env.WORKSPACE}"      
     // the actual test is the git repo
     test = "susemanager-utils/testing/automation/susemanager-unittest.sh"

    // this are execution jobs
    check = "gitarro.ruby2.1  -r ${repository}" + 
                " -c ${context} -d ${description} " +
                " -f ${filter} " +
                " -t ${test} " +
                " -g ${git_fs} " +
                "--check --changed_since 3600" 

    runtest = "gitarro.ruby2.1  -r ${repository}" + 
                " -c ${context} -d ${description} " +
                " -f ${filter} " +
                " -g ${git_fs} " +
                " -u \"${env.BUILD_URL}\"" +
                " -t ${test} " 

   }
   // run only on specific hosts
    agent { label 'suse-manager-unit-tests' }
   // trigger
    triggers {
        cron('H/5 * * * *')
       }
    stages {
        stage('Clean Up Workspace') {
            steps {
                echo 'Clean up previous workspace'
                cleanWs()
            }
        }
        stage('Check Pull Request') {
            steps {
                 echo 'Check if a PR need a test'
                 sh "${check} | grep \"TESTREQUIRED=true\" "
               }
         }
        // THIS JOB RUN ONLY IF THE 1ST IS SUCCESSEFULL. ( so it is triggered by 1st)
        stage('Run tests') {
            steps {
                  echo 'Run tests'
                   sh "$runtest}"
                  }
        }
    }
  post { 
        always { 
            junit "spacewalk*/susemanager/src/reports/tests.xml"
        }
        success {
            echo 'Clean up current workspace, when job success.'
            cleanWs()
        }
    }
}
