#!/usr/bin/env groovy

node('pull-request-test') {
    properties([
        buildDiscarder(logRotator(numToKeepStr: '20', daysToKeepStr: '4')),
        parameters([
            string(name: 'pull_request_repo', defaultValue: 'https://github.com/uyuni-project/uyuni.git', description: 'Pull Request repository'),
            string(name: 'pull_request_number', defaultValue: '', description: 'Uyuni Pull Request Number'),
            string(name: 'builder_api', defaultValue: 'https://api.opensuse.org', description: 'Builder API'),
            string(name: 'builder_project', defaultValue: 'systemsmanagement:Uyuni:Master:PR', description: 'Builder Project'),
            booleanParam(name: 'must_build', defaultValue: true, description: 'Build project'),
            booleanParam(name: 'must_test', defaultValue: true, description: 'Run tests'),
            booleanParam(name: 'must_remove_build', defaultValue: true, description: 'Remove project built'),
            string(name: 'cucumber_gitrepo', defaultValue: 'https://github.com/uyuni-project/uyuni.git', description: 'Change this by your repo, only if you changed the tests in your PR'),
            string(name: 'cucumber_ref', defaultValue: 'master', description: 'Change this by your branch, only if you changed the tests in your PR'),
            string(name: 'email_to', defaultValue: '', description: 'Receive a report to your e-mail when it finish'),
            extendedChoice(name: 'functional_scopes', defaultValue: 'default', multiSelectDelimiter: ',', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_CHECKBOX', visibleItemCount: 30, value: 'default,smdba,spacecmd,spacewalk_utils,visualization,notification_message,virtual_host_manager,subscription_matching,formulas,sp_migration,cve_audit,onboarding,content_lifecycle_management,res,recurring_actions,maintenance_windows,cluster_management,building_container_images,kubernetes_integration,openscap,ubuntu,action_chains,salt_ssh,tomcat,changing_software_channels,monitoring,salt,cobbler,sumatoolbox,virtualization,hub,retail,configuration_channels,content_staging,proxy,traditional_client,xmlrpc,power_management', description: 'Choose the functional scopes that you want to test')
        ])
    ])

    stage('Checkout pipeline') {
        checkout scm
    }
    timeout(activity: false, time: 20, unit: 'HOURS') {
        def pipeline = load "jenkins_pipelines/environments/common/pipeline-pull-request.groovy"
        pipeline.run(params)
    }
}
