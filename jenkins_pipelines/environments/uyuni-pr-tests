#!/usr/bin/env groovy

node('sumaform-cucumber') { //TODO: We must change this label to use a dedicated Jenkins slave, having 6 executors (as number of envs in the pool)
    properties([
        buildDiscarder(logRotator(numToKeepStr: '20', daysToKeepStr: '4')),
        parameters([
            string(name: 'pull_request_repo', defaultValue: 'https://github.com/uyuni-project/uyuni.git', description: 'Pull Request repository'),
            string(name: 'pull_request_number', defaultValue: '', description: 'Uyuni Pull Request Number'),
            string(name: 'builder_api', defaultValue: 'https://api.opensuse.org', description: 'Builder API'),
            string(name: 'builder_project', defaultValue: 'home:jordimassaguerpla:systemsmanagement:Uyuni:Master:PR', description: 'Builder Project'),
            string(name: 'cucumber_gitrepo', defaultValue: 'https://github.com/uyuni-project/uyuni.git', description: 'Testsuite Git Repository'),
            string(name: 'cucumber_ref', defaultValue: 'master', description: 'Testsuite Git reference (branch, tag...)'),
            string(name: 'tf_file', defaultValue: 'susemanager-ci/terracumber_config/tf_files/Uyuni-Master-NUE.tf', description: 'Path to the tf file to be used'),
            string(name: 'sumaform_gitrepo', defaultValue: 'https://github.com/uyuni-project/sumaform.git', description: 'Sumaform Git Repository'),
            string(name: 'sumaform_ref', defaultValue: 'master', description: 'Sumaform Git reference (branch, tag...)'),
            choice(name: 'sumaform_backend', choices: ['libvirt', 'aws'], description: 'Sumaform backend to be used (see https://github.com/uyuni-project/sumaform#backend-choice)'),
            choice(name: 'terraform_bin', choices: ['/usr/bin/terraform_bin'], description: 'Terraform binary path'),
            choice(name: 'terraform_bin_plugins', choices: ['/usr/bin'], description: 'Terraform plugins path'),
            booleanParam(name: 'long_tests', defaultValue: true, description: 'This will enable the execution of long tests'),
            booleanParam(name: 'service_pack_migration', defaultValue: false, description: 'This will enable the execution of service pack migration'),
            // Temporary: should move to uyuni-project
            string(name: 'terracumber_gitrepo', defaultValue: 'https://gitlab.suse.de/juliogonzalezgil/terracumber.git', description: 'Terracumber Git Repository'),
            string(name: 'terracumber_ref', defaultValue: 'master', description: 'Terracumber Git ref (branch, tag...)'),
            booleanParam(name: 'terraform_init', defaultValue: false, description: 'Call terraform init (needed if modules are added or changes)'),
            choice(name: 'rake_namespace', choices: ['cucumber', 'parallel'], description: 'Choose [parallel] (Clients and some features will run in parallel) or [cucumber] (all sequential)'),
            choice(name: 'functional_scope', choices: ['default', 'smdba', 'spacecmd', 'spacewalk_utils', 'visualization', 'notification_message', 'virtual_host_manager',  'subscription_matching', 'formulas', 'sp_migration', 'cve_audit', 'onboarding', 'content_lifecycle_management', 'res', 'recurring_actions', 'maintenance_windows', 'cluster_management', 'building_container_images', 'kubernetes_integration', 'openscap', 'ubuntu', 'action_chains', 'salt_ssh', 'tomcat', 'changing_software_channels', 'monitoring', 'salt', 'cobbler', 'sumatoolbox', 'virtualization', 'hub', 'retail', 'configuration_channels', 'content_staging', 'proxy', 'traditional_client', 'xmlrpc', 'power_management'], description: 'Choose a functional scope and your job will only run tests of that scope')
        ])
    ])

    stage('Checkout pipeline') {
        checkout scm
    }
    timeout(activity: false, time: 10, unit: 'HOURS') {
        def pipeline = load "jenkins_pipelines/environments/common/pipeline-pull-request.groovy"
        pipeline.run(params)
    }
}
