#!/usr/bin/env groovy

node('sumaform-cucumber') {
    properties([
        buildDiscarder(logRotator(numToKeepStr: '5', daysToKeepStr: '30')),
        disableConcurrentBuilds(),
        parameters([
            string(name: 'cucumber_gitrepo', defaultValue: 'https://github.com/SUSE/spacewalk.git', description: 'Testsuite Git Repository'),
            string(name: 'cucumber_ref', defaultValue: 'Manager-4.0', description: 'Testsuite Git reference (branch, tag...)'),
            string(name: 'tf_file', defaultValue: 'susemanager-ci/terracumber_config/tf_files/SUSEManager-4.0-qam.tf', description: 'Path to the tf file to be used'),
            string(name: 'sumaform_gitrepo', defaultValue: 'https://github.com/uyuni-project/sumaform.git', description: 'Sumaform Git Repository'),
            string(name: 'sumaform_ref', defaultValue: 'master', description: 'Sumaform Git reference (branch, tag...)'),
            choice(name: 'sumaform_backend', choices: ['libvirt'], description: 'Sumaform backend to be used (see https://github.com/uyuni-project/sumaform#backend-choice)'),
            choice(name: 'terraform_bin', choices: ['/usr/bin/terraform_bin'], description: 'Terraform binary path'),
            choice(name: 'terraform_bin_plugins', choices: ['/usr/bin'], description: 'Terraform plugins path'),
            // Temporary: should move to uyuni-project
            string(name: 'terracumber_gitrepo', defaultValue: 'https://gitlab.suse.de/oscar-barrios/terracumber.git', description: 'Terracumber Git Repository'),
            string(name: 'terracumber_ref', defaultValue: 'qam-support', description: 'Terracumber Git ref (branch, tag...)'),
            booleanParam(name: 'terraform_init', defaultValue: false, description: 'Call terraform init (needed if modules are added or changes)'),
            booleanParam(name: 'must_deploy', defaultValue: true, description: 'Deploy'),
            booleanParam(name: 'must_run_core', defaultValue: true, description: 'Run Core features'),
            booleanParam(name: 'must_sync', defaultValue: true, description: 'Sync. products and channels'),
            choice(name: 'rake_namespace', choices: ['cucumber'], description: 'Choose parallel or cucumber'),
            text(name: 'mu_repositories', defaultValue: '{"server":"http://download.suse.de/ibs/SUSE:/Maintenance:/12947/SUSE_Updates_SLE-Module-SUSE-Manager-Server_4.0_x86_64/","proxy":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12947/SUSE_Updates_SLE-Module-SUSE-Manager-Server_4.0_x86_64/"},"sle11sp4_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12934/SUSE_Updates_SLE-SERVER_11-SP4-CLIENT-TOOLS_x86_64/"},"sle11sp4_client":{"traditional":"http://download.suse.de/ibs/SUSE:/Maintenance:/12934/SUSE_Updates_SLE-SERVER_11-SP3-CLIENT-TOOLS_x86_64/"},"sle12sp4_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12956/SUSE_Updates_SLE-Manager-Tools_12_x86_64/"},"sle12sp4_client":{"traditional":"http://download.suse.de/ibs/SUSE:/Maintenance:/12966/SUSE_Updates_SLE-Manager-Tools_12_x86_64/"},"sle15_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12957/SUSE_Updates_SLE-Module-Basesystem_15_x86_64/"},"sle15_client":{"traditional":"http://download.suse.de/ibs/SUSE:/Maintenance:/12967/SUSE_Updates_SLE-Manager-Tools_15-SP1_x86_64/"},"sle15sp1_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12958/SUSE_Updates_SLE-Module-Basesystem_15-SP1_x86_64/"},"sle15sp1_client":{"traditional":"http://download.suse.de/ibs/SUSE:/Maintenance:/12967/SUSE_Updates_SLE-Manager-Tools_15_x86_64/"},"ubuntu1804_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12961/SUSE_Updates_Ubuntu_18.04-CLIENT-TOOLS_x86_64/"},"ceos7_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12954/SUSE_Updates_RES_7-CLIENT-TOOLS_x86_64/"},"ceos7_client":{"traditional":" http://download.suse.de/ibs/SUSE:/Maintenance:/12933/SUSE_Updates_RES_7-CLIENT-TOOLS_x86_64/"}}', description: 'Salt & Traditional MU Repositories for each client, in json format')
        ])
    ])

    stage('Checkout pipeline') {
        checkout scm
    }
    def pipeline = load "jenkins_pipelines/environments/common/pipeline-qam-setup.groovy"
    pipeline.run(params)
}
