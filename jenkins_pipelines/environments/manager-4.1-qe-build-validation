#!/usr/bin/env groovy

node('sumaform-cucumber') {
    properties([
        buildDiscarder(logRotator(numToKeepStr: '5', daysToKeepStr: '30', artifactNumToKeepStr: '3')),
        disableConcurrentBuilds(),
        parameters([
            string(name: 'cucumber_gitrepo', defaultValue: 'https://github.com/SUSE/spacewalk.git', description: 'Testsuite Git Repository'),
            string(name: 'cucumber_ref', defaultValue: 'Manager-4.1', description: 'Branch prepared for the MU tested'),
            string(name: 'tf_file', defaultValue: 'susemanager-ci/terracumber_config/tf_files/SUSEManager-4.1-build-validation.tf', description: 'Path to the tf file to be used'),
            string(name: 'sumaform_gitrepo', defaultValue: 'https://github.com/uyuni-project/sumaform.git', description: 'Sumaform Git Repository'),
            string(name: 'sumaform_ref', defaultValue: 'master', description: 'Sumaform Git reference (branch, tag...)'),
            choice(name: 'sumaform_backend', choices: ['libvirt'], description: 'Sumaform backend to be used (see https://github.com/uyuni-project/sumaform#backend-choice)'),
            choice(name: 'terraform_bin', choices: ['/usr/bin/terraform'], description: 'Terraform binary path'),
            choice(name: 'terraform_bin_plugins', choices: ['/usr/bin'], description: 'Terraform plugins path'),
            // Temporary: should move to uyuni-project
            string(name: 'terracumber_gitrepo', defaultValue: 'https://github.com/uyuni-project/terracumber.git', description: 'Terracumber Git Repository'),
            string(name: 'terracumber_ref', defaultValue: 'master', description: 'Terracumber Git ref (branch, tag...)'),
            booleanParam(name: 'terraform_init', defaultValue: true, description: 'Call terraform init (needed if modules are added or changes)'),
            booleanParam(name: 'use_previous_terraform_state', defaultValue: true, description: 'Use previous Terraform state'),
            booleanParam(name: 'must_deploy', defaultValue: true, description: 'Deploy'),
            booleanParam(name: 'must_run_core', defaultValue: true, description: 'Run Core features'),
            booleanParam(name: 'must_sync', defaultValue: true, description: 'Sync. products and channels'),
            booleanParam(name: 'must_add_common_channels', defaultValue: true, description: 'Add common channels'),
            booleanParam(name: 'must_add_custom_channels', defaultValue: true, description: 'Add custom channels'),
            booleanParam(name: 'must_add_keys', defaultValue: true, description: 'Add Activation Keys'),
            booleanParam(name: 'must_create_bootstrap_repos', defaultValue: true, description: 'Create bootstrap repositories'),
            booleanParam(name: 'must_boot_proxy', defaultValue: true, description: 'Bootstrap Proxy'),
            booleanParam(name: 'must_boot_clients', defaultValue: true, description: 'Bootstrap clients'),
            booleanParam(name: 'must_run_tests', defaultValue: true, description: 'Run Smoke Tests'),
            choice(name: 'rake_namespace', choices: ['parallel', 'cucumber'], description: 'Choose parallel or cucumber'),
            string(name: 'capybara_timeout', defaultValue: '30', description: 'Capybara max. waiting time'),
            string(name: 'default_timeout', defaultValue: '300', description: 'Default timeout used in our Test Framework'),
            text(name: 'custom_repositories', defaultValue: '{"server":{"server_stack":"","salt15sp2_base":"","salt15sp2_python2_module":"","salt15sp2_server_apps_module":"","extra_sle_that_affects_suma_srv":""},"proxy":{"salt":"","tools":"","salt15sp2":"","extra_sle_that_affects_suma_proxy":""},"sle11sp4_minion":{"salt":"","tools":""},"sle11sp4_client":{"tools":""},"sle12sp4_minion":{"salt":"","tools":""},"sle12sp4_client":{"tools":""},"sle12sp5_minion":{"salt":"","tools":""},"sle12sp5_client":{"tools":""},"sle15_minion":{"salt":"","tools":""},"sle15_client":{"tools":""},"sle15sp1_minion":{"salt":"","tools":"","python":"","server_apps":""},"sle15sp1_client":{"tools":""},"sle15sp2_minion":{"salt":"","tools":"","python":"","server_apps":""},"sle15sp2_client":{"tools":""},"sle15sp3_minion":{"salt":"","tools":"","python":"","server_apps":""},"sle15sp3_client":{"tools":""},"debian9_minion":{"salt":"","tools":""},"debian10_minion":{"salt":"","tools":""},"ubuntu1804_minion":{"salt":"","tools":""},"ubuntu2004_minion":{"salt":"","tools":""},"ceos7_minion":{"salt":"","tools":""},"ceos7_client":{"tools":""},"ceos8_minion":{"salt":"","tools":""},"ceos8_client":{"tools":""},"opensuse153arm_minion":{"salt":"","tools":""}}', description: 'Salt & Client Tools MU Repositories for each client, in json format')
            ])
    ])

    stage('Checkout pipeline') {
        checkout scm
    }
    def pipeline = load "jenkins_pipelines/environments/common/pipeline-build-validation.groovy"
    pipeline.run(params)
}
