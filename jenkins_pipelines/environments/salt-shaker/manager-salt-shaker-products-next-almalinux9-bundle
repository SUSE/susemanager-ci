#!/usr/bin/env groovy

node('salt-shaker-tests') {
    properties([
        buildDiscarder(logRotator(numToKeepStr: '20', daysToKeepStr: '4', artifactNumToKeepStr: '3')),
        disableConcurrentBuilds(),
        pipelineTriggers([
            URLTrigger(
                cronTabSpec: '* * * * *',
                entries: [URLTriggerEntry(url: 'https://download.opensuse.org/repositories/systemsmanagement:/saltstack:/bundle:/next:/AlmaLinux9/AlmaLinux_9/repodata/repomd.xml')]
            ),
            cron('H 0 * * *')],
        ),
        parameters([
            choice(name: 'salt_flavor', choices: ['bundle'], description: 'Run testsuite for classic Salt or Salt Bundle'),
            booleanParam(name: 'run_unit_tests', defaultValue: true, description: 'Run the Salt unit tests'),
            booleanParam(name: 'run_integration_tests', defaultValue: true, description: 'Run the Salt integration tests'),
            booleanParam(name: 'run_functional_tests', defaultValue: true, description: 'Run the Salt functional tests'),
            string(name: 'cucumber_ref', defaultValue: 'master', description: 'Testsuite Git reference (branch, tag...)'),
            string(name: 'skip_list_url', defaultValue: 'https://raw.githubusercontent.com/openSUSE/salt-test-skiplist/main/skipped_tests.toml', description: 'URL to the skiplist.toml file to run Salt shaker'),
            string(name: 'tf_file', defaultValue: 'susemanager-ci/terracumber_config/tf_files/salt-shaker/Salt-Shaker-Next-AlmaLinux9-Bundle.tf', description: 'Path to the tf file to be used'),
            string(name: 'sumaform_gitrepo', defaultValue: 'https://github.com/uyuni-project/sumaform.git', description: 'Sumaform Git Repository'),
            string(name: 'sumaform_ref', defaultValue: 'master', description: 'Sumaform Git reference (branch, tag...)'),
            choice(name: 'sumaform_backend', choices: ['libvirt', 'aws'], description: 'Sumaform backend to be used (see https://github.com/uyuni-project/sumaform#backend-choice)'),
            choice(name: 'terraform_bin', choices: ['/usr/bin/terraform'], description: 'Terraform binary path'),
            choice(name: 'terraform_bin_plugins', choices: ['/usr/bin'], description: 'Terraform plugins path'),
            string(name: 'terraform_parallelism', defaultValue: '', description: 'Advanced: Define the number of parallel resource operations for terraform'),
            string(name: 'terracumber_gitrepo', defaultValue: 'https://github.com/uyuni-project/terracumber.git', description: 'Terracumber Git Repository'),
            string(name: 'terracumber_ref', defaultValue: 'master', description: 'Terracumber Git ref (branch, tag...)'),
            booleanParam(name: 'terraform_init', defaultValue: true, description: 'Call terraform init (needed if modules are added or changes)'),
            booleanParam(name: 'terraform_taint', defaultValue: true, description: 'Call terraform taint (so the resources, except volumes, are recreated)'),
            booleanParam(name: 'use_previous_terraform_state', defaultValue: true, description: 'Use previous Terraform state'),
        ])
    ])

    stage('Checkout pipeline') {
        checkout scm
    }
    timeout(activity: false, time: 3, unit: 'HOURS') {
        def pipeline = load "jenkins_pipelines/environments/common/pipeline-salt-shaker.groovy"
        pipeline.run(params)
    }
}
