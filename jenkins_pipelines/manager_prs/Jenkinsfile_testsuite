#!/usr/bin/env groovy

// Configure the build properties
properties([
    buildDiscarder(logRotator(numToKeepStr: '20', daysToKeepStr: '4')),
    disableConcurrentBuilds(),
])

def deployed = false

pipeline {

    parameters {
        string(defaultValue: 'Manager-3.2', description: 'Testsuite GitHub branch: It should match the value at manager-3.2-2obs', name: 'testsuite_branch')
        string(defaultValue: 'galaxy-ci@suse.de', description: 'Email address to be used as recipient for the report', name: 'mailto')
    }

    environment {
      repository = 'SUSE/spacewalk'
      deployed = false
    }

    agent { label 'sumaform-cucumber' }

    triggers {
        cron('H(0-30) 0-23/4 * * *')
    }

    stages {
        stage('Deploy') {
            steps {
                checkout scm
                git branch: 'master', url: 'https://gitlab.suse.de/galaxy/sumaform-test-runner.git'
                sh "bash jenkins-deploy.sh ${params.sumaform_env} ${params.mailto} ${params.testsuite_branch}"
                script { deployed = true }
            }
        }

        stage('Setup') {
            steps {
                script { env.deployed = true }
                sh "TESTSUITE_SET=core bash jenkins-test-runner.sh ${params.sumaform_env}"
            }
        }

        stage('Products & Channels synch') {
            steps {
                sh "TESTSUITE_SET=reposync bash jenkins-test-runner.sh ${params.sumaform_env}"
            }
        }

        stage('Initialize clients') {
            steps {
                sh "TESTSUITE_SET=init_clients RAKE_TASK=parallel bash jenkins-test-runner.sh ${params.sumaform_env}"
            }
        }

        stage('Test features') {
            steps {
                sh "TESTSUITE_SET=secondary bash jenkins-test-runner.sh ${params.sumaform_env} ||:"
                sh "TESTSUITE_SET=secondary_parallelizable RAKE_TASK=parallel bash jenkins-test-runner.sh ${params.sumaform_env}"
            }
        }
    }

    post {
        always{
            script {
                if (deployed == true){
                    sh "TESTSUITE_SET=finishing bash jenkins-test-runner.sh ${params.sumaform_env} ||:"
                    publishHTML( target: [
                                allowMissing: true,
                                alwaysLinkToLastBuild: false,
                                keepAll: true,
                                reportDir: "results/build-${env.BUILD_NUMBER}/cucumber_report/",
                                reportFiles: 'cucumber_report.html',
                                reportName: "TestSuite Report"]
                    )
                    junit allowEmptyResults: true, testResults: "results/build-${env.BUILD_NUMBER}/results_junit/*.xml"
                }
            }
        }
        success{
            script {
                if (params.cleanWorkspace == true) {
                    echo 'Clean up current workspace, when job success.'
                    cleanWs()
                }
            }
        }
    }
}
