#!/usr/bin/env groovy

// Configure the build properties
properties([
        buildDiscarder(logRotator(numToKeepStr: '500', daysToKeepStr: '4')),
        disableConcurrentBuilds(),
])

pipeline {

    parameters {
        string(defaultValue: "", description: 'Gitarro PR', name: 'GITARRO_PR_NUMBER')
        booleanParam(defaultValue: true, description: 'Clean up workspace after a successful execution.', name: 'cleanWorkspace')
    }

    environment {
        // CONF To edit
        repository = "SUSE/spacewalk"
        context = "backend_unittests_pgsql"
        description = "python backend pgsql unit test"
        git_fs = "${env.WORKSPACE}"
        filter = 'backend/'
        // the actual test is the git repo (inside spacewalk)
        test = "susemanager-utils/testing/automation/backend-unittest-pgsql.sh"
        gitarro_common_params = "-r ${repository} -c ${context} -d ${description} -f ${filter} -t ${test} -g ${git_fs}"
        gitarro_cmd = 'gitarro.ruby2.1'
        gitarro_local = 'ruby gitarro.rb'
        runtest = "${gitarro_common_params} -u ${env.BUILD_URL}"
    }

    // run only on specific hosts
    agent { label 'suse-manager-unit-tests' }

    stages {
        stage('Clean Up Workspace') {
            steps {
                echo 'Clean up previous workspace'
                cleanWs()
                echo 'Check out SCM'
                checkout scm
                script {
                    if (params.GITARRO_PR_NUMBER != "") {
                        echo 'Check out Gitarro PR'
                        checkout([$class           : 'GitSCM', branches: [[name: "FETCH_HEAD"]],
                                  extensions       : [[$class: 'LocalBranch']],
                                  userRemoteConfigs: [[refspec: "+refs/pull/${params.GITARRO_PR_NUMBER}/head:refs/remotes/origin/PR-${params.GITARRO_PR_NUMBER}", url: "https://git@github.com/openSUSE/gitarro"]]])
                    }
                }
            }
        }
        stage('Run tests against PR') {
            steps {
                echo 'Run tests!'
                script {
                    commands = "${gitarro_cmd} ${runtest}"
                    if (params.GITARRO_PR_NUMBER != "") {
                            commands = "${gitarro_local} ${runtest}"
                    }
                }
                sh "set +e; ${commands}; TESTS_RESULT=\$?; set -e;"
                echo 'Collecting JUnit Test reports'
                junit allowEmptyResults: true, testResults: "**/backend/reports/pgsql_tests.xml"
                sh "exit \$TESTS_RESULT"
            }
        }
    }
    post {
        success {
            script {
                if (params.cleanWorkspace == true) {
                    echo 'Clean up current workspace, when job success.'
                    cleanWs()
                }
            }
        }
    }
}
