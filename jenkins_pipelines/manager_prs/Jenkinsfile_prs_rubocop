#!/usr/bin/env groovy

properties([
    buildDiscarder(logRotator(numToKeepStr: '500', daysToKeepStr: '4')),
    disableConcurrentBuilds(),
])

pipeline {
  environment { 
     repository = "SUSE/spacewalk"
     context = "ruby_rubocop" 
     description = "rubocop checkstyle"
     git_fs = "${env.WORKSPACE}"      
     filter = 'testsuite/'
     test = "${env.WORKSPACE}/jenkins_pipelines/manager_prs/tests_files/rubocop.sh" 
     gitarro_common_params = "-r ${repository} -c ${context} -d ${description} -f ${filter} -t ${test} -g ${git_fs}"
      
     // this are execution jobs
     check = "gitarro.ruby2.1 ${gitarro_common_params} --check --changed_since 3600" 
     runtest = "gitarro.ruby2.1 ${gitarro_common_params} -u ${env.BUILD_URL}"

   }
    agent { label 'suse-manager-unit-tests' }
    triggers {
        cron('H/10 * * * *')
       }
    stages {
        stage('Clean Up Workspace') {
            steps {
                echo 'Clean up previous workspace'
                cleanWs()
                echo 'Check out SCM'
                checkout scm
            }
        }
        stage('Check Pull Request') {
            steps {
                 echo 'Check if a PR need a test'
                 sh "${check} 2>&1 | tee gitarro_check.log"
               }
         }
        stage('Run tests against PR') {
            when {
                expression { return readFile('gitarro_check.log').contains('TESTREQUIRED=true') }
            }
            steps {
                  echo 'Run tests!'
                  sh "${runtest}"
            }
        }
    }
  post { 
        success{
            script {
                if (params.cleanWorkspace == true) {
                    echo 'Clean up current workspace, when job success.'
                    cleanWs()
                }
            }
        }
    }
}
