#!/usr/bin/env groovy

// Configure the build properties
properties([
    buildDiscarder(logRotator(numToKeepStr: '500', daysToKeepStr: '4')),
    disableConcurrentBuilds(),
])

pipeline {

  // env variables
  environment { 
    repository = "SUSE/spacewalk"
    gitarro_changelog_check = "gitarro.ruby2.1  -r ${repository}" + 
                " -c changelog_test -d \"test if changelog was updated\" " +
                " -t /home/jenkins/bin/changelog.rb" +
                " -g \"${env.WORKSPACE}\" " +
                "--check --changed_since 3600" 

    gitarro_changelog_test = "gitarro.ruby2.1  -r ${repository}" + 
                " -c changelog_test -d \"test if changelog was updated\" " +
                " -t /home/jenkins/bin/changelog.rb " +
                " -u ${env.BUILD_URL}" +
                " -g \"${env.WORKSPACE}\" " 
  
   gitarro_enable_merging =  "gitarro.ruby2.1  -r ${repository}" +
                " -c merge_enabled -d \"Merging enabled (requires changelog_test passing)\" " +
                " -u ${env.BUILD_URL}" +
                " -g \"${env.WORKSPACE}\" "
   }
   // run only on specific hosts
    agent { label 'suse-manager-unit-tests' }
    
    parameters {
        booleanParam(defaultValue: true, description: 'Clean up workspace after a successful execution.', name: 'cleanWorkspace')
    }
    
    triggers {
        cron('H/5 * * * *')
    }
    stages {
      stage('Clean Up Workspace') {
          steps {
              echo 'Clean up previous workspace'
              cleanWs()
              echo 'Check out SCM'
              checkout scm
          }
      }
      stage('Check Pull Request for changelog') {
        steps {
                echo 'Check if a PR need changelog test'
                sh "${gitarro_changelog_check} 2>&1 | tee gitarro_check.log"
              }
        }
        // If there is a PR that doesn't contain context changelog, we run this.
        // THIS JOB RUN ONLY IF THE 1ST IS SUCCESSEFULL. ( so it is triggered by 1st)
        stage('Run changelog test') {
            when {
                expression { return readFile('gitarro_check.log').contains('TESTREQUIRED=true') }
            }
            steps {
                echo 'Run changelog tests'
                sh "set +e;" +
                   "${gitarro_changelog_test}; CLRET=\${?};" +
                   "PR_NUMBER=\$(grep 'GITARRO_PR_NUMBER:' ${env.WORKSPACE}/.gitarro_vars | cut -d ':' -f2);" +
                   "if [ \$CLRET -eq 0 ]; then ${gitarro_enable_merging} -t /usr/bin/true -P \$PR_NUMBER; else ${gitarro_enable_merging} -t /usr/bin/false -P \$PR_NUMBER; fi;" +
                   "exit \$CLRET"
            }
        }
    }
   // postactions
   post { 
        success{
            script {
                if (params.cleanWorkspace == true) {
                    echo 'Clean up current workspace, when job success.'
                    cleanWs()
                }
            }
        }
    }
}
